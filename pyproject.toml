[build-system]
requires = ["setuptools >= 64.0", "setuptools-scm>=8.0"]
build-backend = "setuptools.build_meta"


[project]
name = "openapi-test-client"
description = "Generate/update API test clients from any OpenAPI 3.x specifications"
readme = "README.md"
license = {file="LICENSE"}
authors = [
  { name = "Yugo Kato", email =  "yugokato.o@gmail.com" },
]
requires-python = ">=3.11"
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Quality Assurance",
  "Topic :: Software Development :: Testing",
]
dependencies = [
    "common-libs[client]@git+https://github.com/yugokato/common-libs",
    "inflect==7.0.0",
    "phonenumbers==8.13.45",
    "pydantic-extra-types==2.9.0",
    "pydantic[email]==2.9.2",
    "PyYAML==6.0.1",
    "ruff==0.11.0"
]
dynamic = ["version"]

[project.optional-dependencies]
dev = ["common-libs[dev]"]
app = [
    "Quart==0.19.9",
    "quart-auth==0.10.1",
    "quart-schema[pydantic]==0.20.0",
]
test = [
    "common-libs[test]",
    "openapi-test-client[app]",
]

[project.scripts]
openapi-client = "openapi_test_client.scripts.generate_client:main"


[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]
local_scheme = "no-local-version"

[tool.pytest.ini_options]
python_files = ["test_*.py"]
testpaths = "tests"

[tool.ruff]
line-length = 120
indent-width = 4

[tool.ruff.lint]
select = [
    "E",    # pycodestyle
    "F",    # Pyflakes
    "FA",   # flake8-future-annotations
    "I",    # isort
    "PIE",  # flake8-pie
    "PLC",  # Pylint convention
    "PLE",  # Pylint error
    "PLW",  # Pylint warning
    "RUF",  # Ruff-specific rules
    "T20",  # flake8-print
    "UP",   # pyupgrade
    "W",    # pycodestyle warning
]
ignore = [
    "E731",
    "E741",
    "F403",
    "PIE790",
    "PLC0206",
    "PLW2901",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.mypy]
plugins = ["pydantic.mypy"]
files = [
    "src"
]
mypy_path = [
    "src"
]
follow_imports = "skip"
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_defs = true
follow_untyped_imports = false
ignore_missing_imports = true
strict_equality = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_ignores = true
disable_error_code = [
    "import-untyped",
    "misc",
    "operator",
    "override",
    "return",
    "type-arg",
    "union-attr"
]
